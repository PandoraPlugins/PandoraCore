package dev.minecraftplugin.pandoracore.patch.patches.exploit;

import com.azortis.azortislib.utils.FormatUtil;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import dev.minecraftplugin.pandoracore.PandoraCore;
import dev.minecraftplugin.pandoracore.configuration.Config;
import dev.minecraftplugin.pandoracore.patch.Patch;
import net.minecraft.server.v1_8_R3.Packet;
import org.bukkit.Bukkit;
import org.bukkit.event.EventHandler;
import org.bukkit.event.player.PlayerLoginEvent;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

public class UUIDSpoofPatch extends Patch<Packet<?>> {
    private Config<UUIDSpoofPatchData> config;
    private PandoraCore core;

    public UUIDSpoofPatch() {
        super("UUIDSpoofPatch", "Prevents players from spoofing their UUID's.", false,
                false, null, true);
    }

    @Override
    public void enable(PandoraCore core) {
        this.core = core;
        config = core.getConfigManager().loadConfig("/exploits/uuidspoof.json", new UUIDSpoofPatchData());

    }

    @Override
    public void disable(PandoraCore core) {
        config.saveConfig();
    }

    @EventHandler
    public void onPlayerLogin(PlayerLoginEvent event) {


        final UUID ogID = event.getPlayer().getUniqueId();
        Bukkit.getScheduler().runTaskAsynchronously(core, () -> {
            final UUID offlineUUID = UUID.nameUUIDFromBytes(("OfflinePlayer:" + event.getPlayer().getName()).getBytes());
            if (!ogID.equals(offlineUUID)) {
                try {
                    URL url = new URL("https://api.mojang.com/users/profiles/minecraft/" + event.getPlayer().getName());
                    HttpURLConnection connection = (HttpURLConnection) url.openConnection();
                    connection.setRequestMethod("GET");
                    int errorCode = connection.getResponseCode();
                    if (errorCode == 204) {
                        if (config.getConfiguration().cancel)
                            event.getPlayer().kickPlayer(FormatUtil.color(config.getConfiguration().cancelMessage));
                        config.getConfiguration().commands.forEach(s -> Bukkit.dispatchCommand(Bukkit.getConsoleSender(),
                                s.replace("%player%", event.getPlayer().getName())));
                    }
                    BufferedReader in = new BufferedReader(
                            new InputStreamReader(connection.getInputStream()));
                    String inputLine;
                    StringBuilder response = new StringBuilder();
                    while ((inputLine = in.readLine()) != null) {
                        response.append(inputLine);
                    }
                    in.close();
                    JsonObject object = new JsonParser().parse(response.toString()).getAsJsonObject();
                    final UUID uuid = UUID.fromString(object.get("id").getAsString());
                    if (!ogID.equals(uuid)) {
                        event.getPlayer().kickPlayer(FormatUtil.color(config.getConfiguration().cancelMessage));
                        config.getConfiguration().commands.forEach(s -> Bukkit.dispatchCommand(Bukkit.getConsoleSender(),
                                s.replace("%player%", event.getPlayer().getName())));
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    private static class UUIDSpoofPatchData {
        public List<String> commands;
        public boolean cancel = true;
        public String cancelMessage = "&6UUID Spoof!";

        public UUIDSpoofPatchData() {
            commands = new ArrayList<>();
            commands.add("kick %player% Yoted");
        }
    }
}
